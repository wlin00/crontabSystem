{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/component/pages/frontend/Notice/List/List.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Typography, Input, Table, Tag, Modal, Button, message, Icon } from 'antd';\nimport CronContext from '../../../../../context/crontab/cronContext';\nimport Spinner from '../../../../laout/Spinner';\nimport axios from 'axios';\nimport { SyncOutlined } from '@ant-design/icons';\nimport Log from '../Log/Log';\nimport GoodNode from '../GoodNode/GoodNode';\nimport '../List/List.scss';\n\nconst List = () => {\n  //reactHook区域\n  const cronContext = useContext(CronContext);\n  const node = cronContext.node,\n        loading = cronContext.loading,\n        getNode = cronContext.getNode,\n        total = cronContext.total;\n  useEffect(() => {\n    getNode();\n  }, []); //存储当前是第几个删除任务\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        current = _useState2[0],\n        setCurrent = _useState2[1]; //存储当前是第几个强杀任务\n\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentKill = _useState4[0],\n        setCurrentKill = _useState4[1]; //存储当前某个任务的日志\n\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentLog = _useState6[0],\n        setCurrentLog = _useState6[1]; //存储当前第几个编辑的任务\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentEdit = _useState8[0],\n        setCurrentEdit = _useState8[1]; //清空任务操作\n\n\n  const clearData = () => {\n    setName('');\n    setShell('');\n    setCron('');\n  }; //页面刷新\n\n\n  const handleRefresh = () => {\n    getNode();\n  }; //弹窗表单\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        name = _useState10[0],\n        setName = _useState10[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        shell = _useState12[0],\n        setShell = _useState12[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        cron = _useState14[0],\n        setCron = _useState14[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n  //编辑\n\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        nameEdit = _useState16[0],\n        setNameEdit = _useState16[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        shellEdit = _useState18[0],\n        setShellEdit = _useState18[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        cronEdit = _useState20[0],\n        setCronEdit = _useState20[1]; // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n  const handleNameChange = val => {\n    if (val.target.value.length > 30) {\n      return;\n    }\n\n    setName(val.target.value);\n  };\n\n  const handleShellChange = val => {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    setShell(val.target.value);\n  };\n\n  const handleCronChange = val => {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    setCron(val.target.value);\n  }; //编辑任务部分\n\n\n  const handleNameEditChange = val => {\n    if (val.target.value.length > 30) {\n      return;\n    }\n\n    setNameEdit(val.target.value);\n  };\n\n  const handleShellEditChange = val => {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    setShellEdit(val.target.value);\n  };\n\n  const handleCronEditChange = val => {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    setCronEdit(val.target.value);\n  }; //弹窗    \n\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        visible = _useState22[0],\n        setVisible = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        visible2 = _useState24[0],\n        setVisible2 = _useState24[1];\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        visible3 = _useState26[0],\n        setVisible3 = _useState26[1];\n\n  const _useState27 = useState(false),\n        _useState28 = _slicedToArray(_useState27, 2),\n        visible4 = _useState28[0],\n        setVisible4 = _useState28[1];\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        visible5 = _useState30[0],\n        setVisible5 = _useState30[1];\n\n  const _useState31 = useState(false),\n        _useState32 = _slicedToArray(_useState31, 2),\n        visible6 = _useState32[0],\n        setVisible6 = _useState32[1]; //新建任务部分\n\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = e => {\n    setVisible(false);\n\n    if (!name || !shell || !cron) {\n      message.info('请输入正确任务信息！');\n      return false;\n    }\n\n    axios.post('/crontab/job/save', {\n      name: name,\n      command: shell,\n      cronExpr: cron\n    }, {\n      headers: {\n        'Content-Type': 'json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        console.log(data);\n\n        if (data.data.errno !== 0) {\n          message.info(data.data.msg);\n          clearData();\n          return;\n        }\n\n        message.info('添加任务成功');\n        clearData();\n        setTimeout(() => {\n          getNode();\n        }, 300);\n      }\n    }).catch(err => {\n      message.info(err);\n    });\n  };\n\n  const handleCancel = e => {\n    setVisible(false);\n  }; //删除任务部分\n\n\n  const showModal2 = index => {\n    setVisible2(true);\n    console.log('index= ' + index);\n    console.log(node);\n    setCurrent(index);\n    setNameEdit(node[currentEdit].name);\n    setShellEdit(node[currentEdit].command);\n    setCronEdit(node[currentEdit].cronExpr);\n  };\n\n  if (node.length > 0) {}\n\n  const handleOk2 = e => {\n    setVisible2(false); //由于axios源码内部转换post请求参数为JSON.Stringify\n    //所以这里使用URLSearchParams键值对传参\n\n    let param = new URLSearchParams();\n    let task = node[current].name;\n    param.append('name', task);\n    axios.post('/crontab/job/delete', param).then(data => {\n      if (data.status === 200) {\n        console.log(data);\n\n        if (data.data.errno !== 0) {\n          message.info('删除失败');\n          return;\n        }\n\n        message.info('删除成功');\n        setTimeout(() => {\n          getNode();\n        }, 300);\n      }\n    }).catch(err => {\n      message.info(err);\n    });\n  };\n\n  const handleCancel2 = e => {\n    setVisible2(false);\n  }; //强杀任务部分\n\n\n  const showModal3 = index => {\n    setVisible3(true);\n    console.log('index= ' + index);\n    console.log(node);\n    setCurrentKill(index);\n  };\n\n  const handleOk3 = e => {\n    setVisible3(false); //由于axios源码内部转换post请求参数为JSON.Stringify\n    //所以这里使用URLSearchParams键值对传参\n\n    let param = new URLSearchParams();\n    let task = node[currentKill].name;\n    param.append('name', task);\n    axios.post('/crontab/job/kill', param).then(data => {\n      if (data.status === 200) {\n        console.log(data);\n\n        if (data.data.errno !== 0) {\n          message.info('强杀任务失败');\n          return;\n        }\n\n        message.info('强杀任务成功');\n        setTimeout(() => {\n          getNode();\n        }, 300);\n      }\n    }).catch(err => {\n      message.info(err);\n    });\n  };\n\n  const handleCancel3 = e => {\n    setVisible3(false);\n  }; //查看日志部分\n\n\n  const showModal4 = index => {\n    setVisible4(true);\n    setCurrentLog(index);\n  };\n\n  const handleCancel4 = e => {\n    setVisible4(false);\n  }; //查看健康节点部分\n\n\n  const showModal5 = index => {\n    setVisible5(true);\n  };\n\n  const handleCancel5 = e => {\n    setVisible5(false);\n  }; //编辑任务部分\n\n\n  const showModal6 = index => {\n    setVisible6(true);\n    console.log('index= ' + index);\n    console.log(node);\n    setCurrentEdit(index);\n    setNameEdit(node[index].name);\n    setShellEdit(node[index].command);\n    setCronEdit(node[index].cronExpr);\n  };\n\n  const handleOk6 = e => {\n    //由于axios源码内部转换post请求参数为JSON.Stringify\n    //所以这里使用URLSearchParams键值对传参\n    // let param = new URLSearchParams()\n    // let task = node[currentEdit].name\n    // param.append('name', task)\n    console.log(nameEdit, shellEdit, cronEdit);\n    axios.post('/crontab/job/save', {\n      name: nameEdit,\n      command: shellEdit,\n      cronExpr: cronEdit\n    }, {\n      headers: {\n        'Content-Type': 'json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        console.log(data);\n\n        if (data.data.errno !== 0) {\n          message.info(data.data.msg);\n          clearData();\n          return;\n        }\n\n        message.info('修改任务成功');\n        clearData();\n        setTimeout(() => {\n          getNode();\n        }, 300);\n      }\n    }).catch(err => {\n      message.info(err);\n    });\n    setVisible6(false);\n  };\n\n  const handleCancel6 = e => {\n    setVisible6(false);\n  }; //分页\n\n\n  const _useState33 = useState(1),\n        _useState34 = _slicedToArray(_useState33, 2),\n        currentPage = _useState34[0],\n        setCurrentPage = _useState34[1];\n\n  const paginationProps = {\n    showSizeChanger: false,\n    showQuickJumper: false,\n    showTotal: () => \"\\u5171\".concat(total, \"\\u6761\"),\n    pageSize: 5,\n    current: currentPage,\n    total: total,\n    onShowSizeChange: (current, pageSize) => changePageSize(pageSize, current),\n    onChange: current => changePage(current)\n  };\n\n  const changePageSize = (a, b) => {\n    console.log(a, b);\n  };\n\n  const changePage = v => {\n    console.log(v);\n    setCurrentPage(v);\n  }; // const paginationProps = {\n  //     showSizeChanger: true,\n  //     showQuickJumper: false,\n  //     showTotal: () => `共${totals}条`,\n  //     pageSize: this.state.pageSize,\n  //     current: page.pageNum,\n  //     total: page.total,\n  //     onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n  //     onChange: (current) => this.changePage(current),\n  // }\n\n\n  const columns = [{\n    title: '任务名称',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'shell命令',\n    dataIndex: 'order',\n    key: 'order'\n  }, {\n    title: 'cron表达式',\n    dataIndex: 'cron',\n    key: 'cron'\n  }, {\n    title: '正在执行的主机ip',\n    dataIndex: 'ip',\n    key: 'ip',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, text)\n  }, {\n    title: '操作',\n    key: 'action',\n    render: (text, record, index) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => showModal6(index + (currentPage - 1) * 5),\n      className: \"redLink d_btn\",\n      style: {\n        backgroundColor: '#5bc0de'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"\\u7F16\\u8F91\"), React.createElement(\"span\", {\n      onClick: () => showModal2(index + (currentPage - 1) * 5),\n      className: \"redLink d_btn\",\n      style: {\n        backgroundColor: '#d9534f'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"\\u5220\\u9664\"), React.createElement(\"span\", {\n      onClick: () => showModal3(index + (currentPage - 1) * 5),\n      className: \"redLink d_btn\",\n      style: {\n        backgroundColor: '#f0ad4e'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"\\u5F3A\\u6740\"), React.createElement(\"span\", {\n      onClick: () => showModal4(index + (currentPage - 1) * 5),\n      className: \"redLink d_btn\",\n      style: {\n        backgroundColor: '#5cb85c'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"\\u65E5\\u5FD7\"))\n  }];\n  const data = [];\n\n  if (node.length !== undefined) {\n    node.forEach((item, index) => {\n      data.push({\n        key: String(index + 1),\n        name: item.name,\n        order: item.command,\n        cron: item.cronExpr,\n        ip: '127.0.0.1'\n      });\n    });\n  }\n\n  const Text = Typography.Text; // const {ReloadOutlined } = Input\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    title: \"\\u65B0\\u5EFA\\u4EFB\\u52A1\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"\\u4EFB\\u52A1\\u540D\\u79F0\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EFB\\u52A1\\u540D\",\n    value: name,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, \"shell\\u547D\\u4EE4\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165shell\\u547D\\u4EE4\",\n    value: shell,\n    onChange: handleShellChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"cron\\u8868\\u8FBE\\u5F0F\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165cron\\u8868\\u8FBE\\u5F0F\",\n    value: cron,\n    onChange: handleCronChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    title: \"\\u63D0\\u793A\",\n    visible: visible2,\n    onOk: handleOk2,\n    onCancel: handleCancel2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"\\u786E\\u8BA4\\u5220\\u9664\\u6B64\\u8282\\u70B9\\uFF1F\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    title: \"\\u63D0\\u793A\",\n    visible: visible3,\n    onOk: handleOk3,\n    onCancel: handleCancel3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"\\u786E\\u8BA4\\u5F3A\\u5236\\u6740\\u6B7B\\u6B64\\u4EFB\\u52A1\\uFF1F\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    width: \"1000px\",\n    title: \"\\u67E5\\u770B\\u65E5\\u5FD7\",\n    visible: visible4,\n    footer: null,\n    onCancel: handleCancel4,\n    destroyOnClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, React.createElement(Log, {\n    logName: currentLog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    width: \"800px\",\n    title: \"\\u5065\\u5EB7\\u8282\\u70B9\",\n    visible: visible5,\n    footer: null,\n    onCancel: handleCancel5,\n    destroyOnClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, React.createElement(GoodNode, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    title: \"\\u7F16\\u8F91\\u4EFB\\u52A1\",\n    visible: visible6,\n    onOk: handleOk6,\n    onCancel: handleCancel6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }, \"\\u4EFB\\u52A1\\u540D\\u79F0\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EFB\\u52A1\\u540D\",\n    value: nameEdit,\n    onChange: handleNameEditChange,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, \"shell\\u547D\\u4EE4\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165shell\\u547D\\u4EE4\",\n    value: shellEdit,\n    onChange: handleShellEditChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"List-wrap__div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 'normal'\n    },\n    className: \"List-wrap__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, \"cron\\u8868\\u8FBE\\u5F0F\"), React.createElement(Input, {\n    style: {\n      marginBottom: '10px'\n    },\n    className: \"List-wrap__input\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165cron\\u8868\\u8FBE\\u5F0F\",\n    value: cronEdit,\n    onChange: handleCronEditChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"List-btnArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"List-btnArea__btn\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }, \"\\u65B0\\u5EFA\\u4EFB\\u52A1\"), React.createElement(Button, {\n    className: \"List-btnArea__btn\",\n    onClick: showModal5,\n    style: {\n      backgroundColor: '#5cb85c'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, \"\\u5065\\u5EB7\\u8282\\u70B9\"), React.createElement(SyncOutlined, {\n    onClick: handleRefresh,\n    className: \"redLink\",\n    style: {\n      fontSize: '20px',\n      position: 'relative',\n      left: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"List-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: paginationProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  })));\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/component/pages/frontend/Notice/List/List.js"],"names":["React","useEffect","useState","useContext","Typography","Input","Table","Tag","Modal","Button","message","Icon","CronContext","Spinner","axios","SyncOutlined","Log","GoodNode","List","cronContext","node","loading","getNode","total","current","setCurrent","currentKill","setCurrentKill","currentLog","setCurrentLog","currentEdit","setCurrentEdit","clearData","setName","setShell","setCron","handleRefresh","name","shell","cron","nameEdit","setNameEdit","shellEdit","setShellEdit","cronEdit","setCronEdit","handleNameChange","val","target","value","length","handleShellChange","handleCronChange","handleNameEditChange","handleShellEditChange","handleCronEditChange","visible","setVisible","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","showModal","handleOk","e","info","post","command","cronExpr","headers","then","data","status","console","log","errno","msg","setTimeout","catch","err","handleCancel","showModal2","index","handleOk2","param","URLSearchParams","task","append","handleCancel2","showModal3","handleOk3","handleCancel3","showModal4","handleCancel4","showModal5","handleCancel5","showModal6","handleOk6","handleCancel6","currentPage","setCurrentPage","paginationProps","showSizeChanger","showQuickJumper","showTotal","pageSize","onShowSizeChange","changePageSize","onChange","changePage","a","b","v","columns","title","dataIndex","key","render","text","record","backgroundColor","undefined","forEach","item","push","String","order","ip","Text","fontSize","marginBottom","fontWeight","position","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { Typography, Input, Table, Tag, Modal, Button, message, Icon } from 'antd'\nimport CronContext from '../../../../../context/crontab/cronContext'\nimport Spinner from '../../../../laout/Spinner'\nimport axios from 'axios'\nimport { SyncOutlined } from '@ant-design/icons';\nimport Log from '../Log/Log'\nimport GoodNode from '../GoodNode/GoodNode'\n\nimport '../List/List.scss'\n\nconst List = () => {\n\n    //reactHook区域\n    const cronContext = useContext(CronContext)\n    const { node, loading, getNode, total } = cronContext\n\n    useEffect(() => {\n        getNode()\n    }, [])\n\n\n    //存储当前是第几个删除任务\n    const [current, setCurrent] = useState(0)\n    //存储当前是第几个强杀任务\n    const [currentKill, setCurrentKill] = useState(0)\n    //存储当前某个任务的日志\n    const [currentLog, setCurrentLog] = useState(0)\n    //存储当前第几个编辑的任务\n    const [currentEdit, setCurrentEdit] = useState(0)\n\n\n    //清空任务操作\n    const clearData = () => {\n        setName('')\n        setShell('')\n        setCron('')\n    }\n\n    //页面刷新\n    const handleRefresh = () => {\n        getNode()\n    }\n\n\n    //弹窗表单\n    const [name, setName] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n    const [shell, setShell] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n    const [cron, setCron] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n    //编辑\n    const [nameEdit, setNameEdit] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n    const [shellEdit, setShellEdit] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n    const [cronEdit, setCronEdit] = useState(''); // reactHook 重构： 使用useState重构state，进行状态接管\n\n\n\n    const handleNameChange = (val) => {\n        if (val.target.value.length > 30) { return }\n        setName(val.target.value)\n    }\n    const handleShellChange = (val) => {\n        if (val.target.value.length > 25) { return }\n        setShell(val.target.value)\n    }\n    const handleCronChange = (val) => {\n        if (val.target.value.length > 25) { return }\n        setCron(val.target.value)\n    }\n\n    //编辑任务部分\n    const handleNameEditChange = (val) => {\n        if (val.target.value.length > 30) { return }\n        setNameEdit(val.target.value)\n    }\n    const handleShellEditChange = (val) => {\n        if (val.target.value.length > 25) { return }\n        setShellEdit(val.target.value)\n    }\n    const handleCronEditChange = (val) => {\n        if (val.target.value.length > 25) { return }\n        setCronEdit(val.target.value)\n    }\n\n    //弹窗    \n    const [visible, setVisible] = useState(false)\n    const [visible2, setVisible2] = useState(false)\n    const [visible3, setVisible3] = useState(false)\n    const [visible4, setVisible4] = useState(false)\n    const [visible5, setVisible5] = useState(false)\n    const [visible6, setVisible6] = useState(false)\n\n\n    //新建任务部分\n    const showModal = () => {\n        setVisible(true)\n    };\n\n    const handleOk = e => {\n        setVisible(false)\n        if (!name || !shell || !cron) {\n            message.info('请输入正确任务信息！')\n            return false;\n        }\n\n        axios.post('/crontab/job/save',{name:name,command:shell,cronExpr:cron},{\n            headers:{'Content-Type':'json'}\n        } )\n            .then((data) => {\n                if (data.status === 200) {\n                    console.log(data)\n                    if (data.data.errno !== 0) {\n                        message.info(data.data.msg);\n                        clearData()\n                        return\n                    }\n                    message.info('添加任务成功')\n                    clearData()\n                    setTimeout(() => {\n                        getNode()\n                    }, 300)\n                }\n\n            })\n            .catch((err) => { message.info(err) })\n    };\n\n    const handleCancel = e => {\n        setVisible(false)\n    };\n\n\n    //删除任务部分\n\n    const showModal2 = (index) => {\n        setVisible2(true)\n        console.log('index= ' + index)\n        console.log(node)\n        setCurrent(index)\n        setNameEdit(node[currentEdit].name)\n        setShellEdit(node[currentEdit].command)\n        setCronEdit(node[currentEdit].cronExpr)\n    };\n\n    if(node.length>0){\n  \n\n    }\n\n    const handleOk2 = e => {\n        setVisible2(false)\n        //由于axios源码内部转换post请求参数为JSON.Stringify\n        //所以这里使用URLSearchParams键值对传参\n        let param = new URLSearchParams()\n        let task = node[current].name\n        param.append('name', task)\n\n        axios.post('/crontab/job/delete', param)\n            .then((data) => {\n                if (data.status === 200) {\n                    console.log(data)\n                    if (data.data.errno !== 0) {\n                        message.info('删除失败');\n                        return\n                    }\n                    message.info('删除成功')\n                    setTimeout(() => {\n                        getNode()\n                    }, 300)\n                }\n\n            })\n            .catch((err) => { message.info(err) })\n    };\n\n    const handleCancel2 = e => {\n        setVisible2(false)\n    };\n\n    //强杀任务部分\n    const showModal3 = (index) => {\n        setVisible3(true)\n        console.log('index= ' + index)\n        console.log(node)\n        setCurrentKill(index)\n    };\n\n    const handleOk3 = e => {\n        setVisible3(false)\n        //由于axios源码内部转换post请求参数为JSON.Stringify\n        //所以这里使用URLSearchParams键值对传参\n        let param = new URLSearchParams()\n        let task = node[currentKill].name\n        param.append('name', task)\n\n        axios.post('/crontab/job/kill', param)\n            .then((data) => {\n                if (data.status === 200) {\n                    console.log(data)\n                    if (data.data.errno !== 0) {\n                        message.info('强杀任务失败');\n                        return\n                    }\n                    message.info('强杀任务成功')\n                    setTimeout(() => {\n                        getNode()\n                    }, 300)\n                }\n            })\n            .catch((err) => { message.info(err) })\n    };\n\n    const handleCancel3 = e => {\n        setVisible3(false)\n    };\n\n\n    //查看日志部分\n    const showModal4 = (index) => {\n        setVisible4(true)\n        setCurrentLog(index)\n    };\n\n    const handleCancel4 = e => {\n        setVisible4(false)\n    };\n\n     //查看健康节点部分\n     const showModal5 = (index) => {\n        setVisible5(true)\n    };\n\n    const handleCancel5 = e => {\n        setVisible5(false)\n    };\n\n    //编辑任务部分\n      const showModal6 = (index) => {\n        setVisible6(true)\n        console.log('index= ' + index)\n        console.log(node)\n        setCurrentEdit(index)\n        setNameEdit(node[index].name)\n        setShellEdit(node[index].command)\n        setCronEdit(node[index].cronExpr)\n    };\n\n    const handleOk6 = e => {\n        //由于axios源码内部转换post请求参数为JSON.Stringify\n        //所以这里使用URLSearchParams键值对传参\n        // let param = new URLSearchParams()\n        // let task = node[currentEdit].name\n        // param.append('name', task)\n        console.log(nameEdit,shellEdit,cronEdit)\n\n        axios.post('/crontab/job/save',{name:nameEdit,command:shellEdit,cronExpr:cronEdit},{\n            headers:{'Content-Type':'json'}\n        } )\n            .then((data) => {\n                if (data.status === 200) {\n                    console.log(data)\n                    if (data.data.errno !== 0) {\n                        message.info(data.data.msg);\n                        clearData()\n                        return\n                    }\n                    message.info('修改任务成功')\n                    clearData()\n                    setTimeout(() => {\n                        getNode()\n                    }, 300)\n                }\n\n            })\n            .catch((err) => { message.info(err) })\n\n        setVisible6(false)\n\n    };\n\n    const handleCancel6 = e => {\n        setVisible6(false)\n    };\n\n\n    //分页\n    const [currentPage, setCurrentPage] = useState(1)\n    const paginationProps = {\n        showSizeChanger: false,\n        showQuickJumper: false,\n        showTotal: () => `共${total}条`,\n        pageSize: 5,\n        current: currentPage,\n        total: total,\n        onShowSizeChange: (current, pageSize) => changePageSize(pageSize, current),\n        onChange: (current) => changePage(current),\n    }\n\n    const changePageSize = (a, b) => {\n        console.log(a, b)\n    }\n\n    const changePage = (v) => {\n        console.log(v)\n        setCurrentPage(v)\n    }\n\n    // const paginationProps = {\n    //     showSizeChanger: true,\n    //     showQuickJumper: false,\n    //     showTotal: () => `共${totals}条`,\n    //     pageSize: this.state.pageSize,\n    //     current: page.pageNum,\n    //     total: page.total,\n    //     onShowSizeChange: (current, pageSize) => this.changePageSize(pageSize, current),\n    //     onChange: (current) => this.changePage(current),\n    // }\n\n\n\n\n    const columns = [\n        {\n            title: '任务名称',\n            dataIndex: 'name',\n            key: 'name',\n        },\n\n        {\n            title: 'shell命令',\n            dataIndex: 'order',\n            key: 'order',\n        },\n        {\n            title: 'cron表达式',\n            dataIndex: 'cron',\n            key: 'cron',\n        },\n        {\n            title: '正在执行的主机ip',\n            dataIndex: 'ip',\n            key: 'ip',\n            render: text => <span>{text}</span>,\n        },\n\n        {\n            title: '操作',\n            key: 'action',\n            render: (text, record, index) => (\n                <span>\n                    <span onClick={() => showModal6(index + (currentPage - 1) * 5)} className='redLink d_btn' style={{ backgroundColor: '#5bc0de' }}>编辑</span>\n                    <span onClick={() => showModal2(index + (currentPage - 1) * 5)} className='redLink d_btn' style={{ backgroundColor: '#d9534f' }}>删除</span>\n                    <span onClick={() => showModal3(index + (currentPage - 1) * 5)} className='redLink d_btn' style={{ backgroundColor: '#f0ad4e' }}>强杀</span>\n                    <span onClick={() => showModal4(index + (currentPage - 1) * 5)} className='redLink d_btn' style={{ backgroundColor: '#5cb85c' }}>日志</span>\n\n                </span>\n            ),\n        },\n    ];\n\n    const data = [];\n\n    if (node.length !== undefined) {\n        node.forEach((item, index) => {\n            data.push({\n                key: String(index + 1),\n                name: item.name,\n                order: item.command,\n                cron: item.cronExpr,\n                ip: '127.0.0.1'\n            })\n\n        })\n    }\n\n\n    const { Text } = Typography\n    // const {ReloadOutlined } = Input\n\n\n    if (loading) {\n        return <Spinner></Spinner>\n    }\n    return (\n        <div className='List'>\n            <div>\n                <Modal\n                    title=\"新建任务\"\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                >\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">任务名称</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入任务名\"\n                            value={name}\n                            onChange={handleNameChange}\n                        />\n                    </div>\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">shell命令</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入shell命令\"\n                            value={shell}\n                            onChange={handleShellChange}\n                        />\n                    </div>\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">cron表达式</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入cron表达式\"\n                            value={cron}\n                            onChange={handleCronChange}\n                        />\n                    </div>\n\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    title='提示'\n                    visible={visible2}\n                    onOk={handleOk2}\n                    onCancel={handleCancel2}\n                >\n                    <p style={{ fontWeight: 'bold' }}>\n                        确认删除此节点？\n                    </p>\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    title='提示'\n                    visible={visible3}\n                    onOk={handleOk3}\n                    onCancel={handleCancel3}\n                >\n                    <p style={{ fontWeight: 'bold' }}>\n                        确认强制杀死此任务？\n                    </p>\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    width='1000px'\n                    title=\"查看日志\"\n                    visible={visible4}\n                    footer={null}\n                    onCancel={handleCancel4}\n                    destroyOnClose={true}\n\n                >\n                    <Log logName={currentLog}/>\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    width='800px'\n                    title=\"健康节点\"\n                    visible={visible5}\n                    footer={null}\n                    onCancel={handleCancel5}\n                    destroyOnClose={true}\n                >\n                    <GoodNode/>\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    title=\"编辑任务\"\n                    visible={visible6}\n                    onOk={handleOk6}\n                    onCancel={handleCancel6}\n                >\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">任务名称</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入任务名\"\n                            value={nameEdit}\n                            onChange={handleNameEditChange}\n                            disabled\n                        />\n                    </div>\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">shell命令</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入shell命令\"\n                            value={shellEdit}\n                            onChange={handleShellEditChange}\n                        />\n                    </div>\n                    <div className='List-wrap__div'>\n                        <Text style={{ fontSize: 'normal' }} className=\"List-wrap__text\">cron表达式</Text>\n                        <Input\n                            style={{marginBottom:'10px'}}\n                            className=\"List-wrap__input\"\n                            placeholder=\"请输入cron表达式\"\n                            value={cronEdit}\n                            onChange={handleCronEditChange}\n                        />\n                    </div>\n\n                </Modal>\n            </div>\n            \n            <div className='List-btnArea'>\n                <Button className='List-btnArea__btn' onClick={showModal}>新建任务</Button>\n                <Button className='List-btnArea__btn'  onClick={showModal5} style={{ backgroundColor: '#5cb85c' }} >健康节点</Button>\n                <SyncOutlined onClick={handleRefresh} className='redLink' style={{ fontSize: '20px', position: 'relative', left: '5px' }} />\n            </div>\n            <div className='List-area'>\n                <Table columns={columns} dataSource={data} pagination={paginationProps} />\n            </div>\n        </div>\n    )\n}\n\n\nexport default List\n\n\n\n"]},"metadata":{},"sourceType":"module"}