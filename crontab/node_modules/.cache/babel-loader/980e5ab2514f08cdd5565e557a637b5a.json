{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/component/laout/Regist.js\";\nimport React, { Component } from 'react';\nimport { Button, Input, Icon, message } from 'antd';\nimport axios from 'axios';\n\nclass Regist extends Component {\n  //此组件未使用hook重构，因无可复用逻辑和useContext操作；\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      mailNum: '',\n      btnMessage: '点击获取邮箱验证码',\n      btnFlag: false,\n      serverMail: 0 //记录服务器端的邮箱验证码\n\n    };\n    this.flag = false;\n    this.interval = null;\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.interval);\n  } //清空数据\n\n\n  clearData() {\n    this.setState({\n      username: '',\n      password: '',\n      mailNum: ''\n    });\n  } // 去登陆\n\n\n  handleGoLogin() {\n    this.props.history.push('/login');\n  } // 注册\n\n\n  handleRegist() {\n    // eslint-disable-next-line \n    let reg = /^([a-zA-Z\\d])(\\w|\\-)+@[a-zA-Z\\d]+\\.[a-zA-Z]{2,4}$/; //邮箱正则验证\n\n    let psReg = /^[0-9a-zA-Z]{6,25}$/; //密码正则校验\n\n    let _this$state = this.state,\n        us = _this$state.username,\n        ps = _this$state.password,\n        mailNum = _this$state.mailNum,\n        serverMail = _this$state.serverMail;\n    console.log(us, ps, '1', mailNum, '2', serverMail);\n\n    if (!ps || !us) {\n      message.info('请输入账号或密码');\n      return false;\n    }\n\n    if (!reg.test(us)) {\n      message.info('请输入正确邮箱账号格式');\n      return false;\n    }\n\n    if (!psReg.test(ps)) {\n      message.info('请输入6-25位数字或字母作为密码');\n      return false;\n    }\n\n    if (mailNum !== serverMail) {\n      message.info('邮箱验证码不正确');\n      return false;\n    } // eslint-disable-next-line \n\n\n    axios.post('zjj/user/reg', {\n      us,\n      ps,\n      code: mailNum\n    }).then(data => {\n      if (data.status === 200) {\n        console.log(data.data.code, data.status, data.statusText, data.headers);\n        this.setState({\n          btnFlag: false,\n          btnMessage: '点击获取邮箱验证码'\n        });\n\n        if (data.data.err === -3) {\n          message.info('该用户已存在！');\n          this.clearData();\n        } else {\n          message.info('用户注册成功');\n          this.clearData();\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } //获取验证码\n\n\n  getNoteValue() {\n    if (this.flag) {\n      return;\n    } //标识符节流\n\n\n    this.flag = true;\n    const mail = this.state.username; //获取用户注册的邮箱\n    // eslint-disable-next-line\n\n    let reg = /^([a-zA-Z\\d])(\\w|\\-)+@[a-zA-Z\\d]+\\.[a-zA-Z]{2,4}$/; //邮箱正则验证\n\n    if (!reg.test(mail)) {\n      message.info('请输入正确的邮箱格式');\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } else {\n      // eslint-disable-next-line \n      axios.post('zjj/user/getMailCode', {\n        mail: mail\n      }).then(data => {\n        if (data.status === 200) {\n          console.log(data.data.code, data.status, data.statusText, data.headers);\n          this.setState({\n            serverMail: data.data.code\n          }, () => {\n            console.log('server' + this.state.serverMail, 'client' + this.state.mailNum);\n          }); //记录serverMail\n          //60s内禁用按钮\n\n          this.setState({\n            btnFlag: true,\n            btnMessage: '60s后可重新获取'\n          });\n          message.info('已发送邮箱验证码');\n          this.interval = setTimeout(() => {\n            this.setState({\n              btnFlag: false,\n              btnMessage: '点击获取邮箱验证码'\n            });\n          }, 1000 * 60);\n          this.flag = false;\n        }\n      }).catch(err => {\n        console.log(err);\n        this.flag = false;\n      });\n    }\n  } // 数据双向绑定\n\n\n  handleNameChange(val) {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    this.setState({\n      username: val.target.value\n    });\n  }\n\n  handlePassChange(val) {\n    if (val.target.value.length > 25) {\n      return;\n    }\n\n    this.setState({\n      password: val.target.value\n    });\n  }\n\n  handleMailChange(val) {\n    if (val.target.value.length > 4) {\n      return;\n    }\n\n    this.setState({\n      mailNum: parseInt(val.target.value)\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password,\n          mailNum = _this$state2.mailNum;\n    return React.createElement(\"div\", {\n      className: \"page-login\",\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundImage: \"url(\" + require(\"../../pic/img2.jpg\") + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"rootFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u60A8\\u8981\\u6CE8\\u518C\\u7684\\u8D26\\u53F7\\uFF1A\"), React.createElement(Input, {\n      className: \"login-name loginInp\",\n      value: username,\n      length: 20,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u60A8\\u8981\\u6CE8\\u518C\\u7684\\u90AE\\u7BB1\",\n      onChange: val => this.handleNameChange(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"login-span rootFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\u8D26\\u53F7\\u5BC6\\u7801\\uFF1A\"), React.createElement(Input, {\n      className: \"loginInp\",\n      type: \"password\",\n      length: 20,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u6CE8\\u518C\\u7684\\u5BC6\\u7801(\\u81F3\\u5C11\\u516D\\u4F4D\\u5B57\\u6BCD\\u6216\\u6570\\u5B57)\",\n      value: password,\n      onChange: val => this.handlePassChange(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: this.state.btnFlag,\n      onClick: () => this.getNoteValue(),\n      className: \"mail-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.btnMessage), React.createElement(Input // maxLength={4}\n    , {\n      type: \"number\",\n      className: \"login-name\",\n      placeholder: \"\\u8BF7\\u8F93\\u51654\\u4F4D\\u90AE\\u7BB1\\u9A8C\\u8BC1\\u7801\",\n      value: mailNum,\n      onChange: val => this.handleMailChange(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleRegist.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\")), React.createElement(\"div\", {\n      className: \"hover-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"login\",\n      className: \"login-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"loginFont\",\n      onClick: this.handleGoLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u5DF2\\u6709\\u8D26\\u53F7\\uFF0C\\u53BB\\u767B\\u9646\"))));\n  }\n\n}\n\nexport default Regist;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/component/laout/Regist.js"],"names":["React","Component","Button","Input","Icon","message","axios","Regist","constructor","props","state","username","password","mailNum","btnMessage","btnFlag","serverMail","flag","interval","componentWillUnmount","clearTimeout","clearData","setState","handleGoLogin","history","push","handleRegist","reg","psReg","us","ps","console","log","info","test","post","code","then","data","status","statusText","headers","err","catch","getNoteValue","mail","setTimeout","window","location","reload","handleNameChange","val","target","value","length","handlePassChange","handleMailChange","parseInt","render","width","height","backgroundImage","require","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input, Icon, message } from 'antd'\nimport axios from 'axios'\n\nclass Regist extends Component { //此组件未使用hook重构，因无可复用逻辑和useContext操作；\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            mailNum: '',\n            btnMessage: '点击获取邮箱验证码',\n            btnFlag: false,\n            serverMail: 0 //记录服务器端的邮箱验证码\n        }\n        this.flag = false\n        this.interval = null\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.interval)\n    }\n\n\n    //清空数据\n    clearData() {\n        this.setState({ username: '', password: '', mailNum: '' })\n    }\n\n    // 去登陆\n    handleGoLogin() {\n        this.props.history.push('/login')\n    }\n\n    // 注册\n    handleRegist() {\n        // eslint-disable-next-line \n        let reg = /^([a-zA-Z\\d])(\\w|\\-)+@[a-zA-Z\\d]+\\.[a-zA-Z]{2,4}$/ //邮箱正则验证\n        let psReg =/^[0-9a-zA-Z]{6,25}$/ //密码正则校验\n        let { username: us, password: ps, mailNum, serverMail } = this.state;\n        console.log(us, ps, '1', mailNum, '2', serverMail);\n\n        if (!ps || !us) {\n            message.info('请输入账号或密码');\n            return false\n        }\n        if (!reg.test(us)) {\n            message.info('请输入正确邮箱账号格式');\n            return false\n        }\n        if(!psReg.test(ps)){\n            message.info('请输入6-25位数字或字母作为密码');\n            return false\n        }\n        if (mailNum !== serverMail) {\n            message.info('邮箱验证码不正确');\n            return false;\n        }\n\n        // eslint-disable-next-line \n        axios.post('zjj/user/reg', { us, ps, code: mailNum }).\n            then((data) => {\n                if (data.status === 200) {\n                    console.log(data.data.code, data.status, data.statusText, data.headers);\n                    this.setState({ btnFlag: false, btnMessage: '点击获取邮箱验证码' })\n                    if (data.data.err === -3) {\n                        message.info('该用户已存在！');\n                        this.clearData();\n                    }\n                    else {\n                        message.info('用户注册成功');\n                        this.clearData();\n                    }\n                }\n            })\n            .catch((err) => { console.log(err) });\n    }\n\n    //获取验证码\n    getNoteValue() {\n        if (this.flag) { return } //标识符节流\n        this.flag = true\n        const { username: mail } = this.state //获取用户注册的邮箱\n        // eslint-disable-next-line\n        let reg = /^([a-zA-Z\\d])(\\w|\\-)+@[a-zA-Z\\d]+\\.[a-zA-Z]{2,4}$/ //邮箱正则验证\n        if (!reg.test(mail)) { \n            message.info('请输入正确的邮箱格式');\n            setTimeout(()=>{\n                window.location.reload() \n             },1000)\n        }\n        else {\n            // eslint-disable-next-line \n            axios.post('zjj/user/getMailCode', { mail: mail }).\n                then((data) => {\n                    if (data.status === 200) {\n                        console.log(data.data.code, data.status, data.statusText, data.headers);\n                        this.setState({ serverMail: data.data.code },\n                            () => { console.log('server' + this.state.serverMail, 'client' + this.state.mailNum) })//记录serverMail\n                        //60s内禁用按钮\n                        this.setState({ btnFlag: true, btnMessage: '60s后可重新获取' })\n                        message.info('已发送邮箱验证码');\n                        this.interval = setTimeout(() => {\n                            this.setState({ btnFlag: false, btnMessage: '点击获取邮箱验证码' })\n                        }, 1000 * 60)\n                        this.flag = false\n                    }\n                })\n                .catch((err) => { console.log(err); this.flag = false });\n        }\n    }\n\n    // 数据双向绑定\n    handleNameChange(val) {\n        if (val.target.value.length > 25) { return }\n\n        this.setState({\n            username: val.target.value\n        })\n    }\n    handlePassChange(val) {\n        if (val.target.value.length > 25) { return }\n        this.setState({\n            password: val.target.value\n        })\n    }\n    handleMailChange(val) {\n        if (val.target.value.length > 4) { return }\n        this.setState({\n            mailNum: parseInt(val.target.value)\n        })\n    }\n\n\n    render() {\n        const { username, password, mailNum } = this.state\n        return (\n            <div className=\"page-login\"\n                 style={{width:'100%',height:'100%',backgroundImage: \"url(\" + require(\"../../pic/img2.jpg\") + \")\"}}     \n            >\n                {/* <Logo/> */}\n                <div className='login-wrap'>\n                    <span className='rootFont'>您要注册的账号：</span>\n                    <Input\n                        className='login-name loginInp'\n                        value={username}\n                        length={20}\n                        placeholder=\"请输入您要注册的邮箱\"\n                        onChange={val => this.handleNameChange(val)}\n                    />\n                    <span className=\"login-span rootFont\">账号密码：</span>\n                    <Input\n                        className=\"loginInp\"\n                        type=\"password\"\n                        length={20}\n                        placeholder=\"请输入注册的密码(至少六位字母或数字)\"\n                        value={password}\n                        onChange={val => this.handlePassChange(val)}\n                    />\n                    <Button\n                        disabled={this.state.btnFlag}\n                        onClick={() => this.getNoteValue()}\n                        className=\"mail-btn\">{this.state.btnMessage}</Button>\n                    <Input\n                        // maxLength={4}\n                        type=\"number\"\n                        className='login-name'\n                        placeholder=\"请输入4位邮箱验证码\"\n                        value={mailNum}\n                        onChange={val => this.handleMailChange(val)}\n                    />\n                    <div className='login-btn'><Button type=\"primary\"\n                        onClick={this.handleRegist.bind(this)}\n                    >注册</Button></div>\n                    <div className='hover-btn'><Icon type='login' className='login-icon' /><span className='loginFont'\n                        onClick={this.handleGoLogin.bind(this)}\n                    >已有账号，去登陆</span></div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\n\nexport default Regist\n\n"]},"metadata":{},"sourceType":"module"}