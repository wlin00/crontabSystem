{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/context/user/userState.js\";\nimport React, { useReducer } from 'react';\nimport UserContext from './userContext';\nimport UserReducer from './userReducer';\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { GET_LOGINUSER, GET_ALLUSER, ClEAR_USER, SET_LOADING } from '../type';\n\nconst UserState = props => {\n  //初始化状态\n  const initialState = {\n    list: {},\n    allUser: {},\n    loading: false,\n    total: 0 // userInfo:{},\n    // repos:[]\n\n  }; //使用useReducer，即state关联Reducer\n\n  const _useReducer = useReducer(UserReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n  //实现方法区域                                                          \n  //getLoginUser\n\n\n  const getLoginUser = async _id => {\n    //根据login名获取user信息\n    setLoading(true); //只要开始请求数据，更改为loading状态   \n\n    const res = await axios.post('/zjj/user/getUserById', {\n      Id: _id\n    });\n\n    if (res.data.err === -1) {\n      message.info('参数错误');\n      setLoading(false);\n      return;\n    }\n\n    if (res.data.err === -2) {\n      message.info('用户查询失败，请重试');\n      setLoading(false);\n      return;\n    }\n\n    dispatch({\n      type: GET_LOGINUSER,\n      payload: {\n        list: res.data.list[0]\n      }\n    });\n    setLoading(false);\n  }; //getLoginUser\n\n\n  const getAllUser = async right => {\n    //根据login名获取user信息\n    setLoading(true); //只要开始请求数据，更改为loading状态\n\n    const res = await axios.post('/zjj/user/getUserByRight', {\n      right\n    });\n\n    if (res.data.err === -1) {\n      message.info('参数错误');\n      setLoading(false);\n      return;\n    }\n\n    if (res.data.err === -2) {\n      message.info('查询失败，请重试');\n      setLoading(false);\n      return;\n    }\n\n    dispatch({\n      type: GET_ALLUSER,\n      payload: {\n        allUser: res.data.list,\n        total: res.data.total\n      }\n    });\n    setLoading(false);\n  }; //clear users\n\n\n  const clearUser = () => {\n    dispatch({\n      type: ClEAR_USER\n    });\n  }; //set loading\n\n\n  const setLoading = loading => {\n    dispatch({\n      type: SET_LOADING,\n      //使用dispatch提交到Reducer中\n      payload: {\n        loading\n      }\n    });\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      list: state.list,\n      allUser: state.allUser,\n      loading: state.loading,\n      total: state.total,\n      // userInfo:state.userInfo,\n      // repos:state.repos,\n      setLoading,\n      clearUser,\n      getLoginUser,\n      getAllUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default UserState;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/context/user/userState.js"],"names":["React","useReducer","UserContext","UserReducer","axios","message","GET_LOGINUSER","GET_ALLUSER","ClEAR_USER","SET_LOADING","UserState","props","initialState","list","allUser","loading","total","state","dispatch","getLoginUser","_id","setLoading","res","post","Id","data","err","info","type","payload","getAllUser","right","clearUser","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport UserContext from './userContext';\nimport UserReducer from './userReducer';\nimport axios from 'axios'\nimport {message} from 'antd'\n\nimport { GET_LOGINUSER,GET_ALLUSER,ClEAR_USER, SET_LOADING } from '../type'\n\n\n\nconst UserState = props => {\n    //初始化状态\n    const initialState = {\n        list: {},\n        allUser:{},\n        loading: false,\n        total:0,\n        // userInfo:{},\n        // repos:[]\n    };\n\n    //使用useReducer，即state关联Reducer\n    const [state, dispatch] = useReducer(UserReducer, initialState) //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n\n    //实现方法区域                                                          \n    //getLoginUser\n    const getLoginUser = async _id => { //根据login名获取user信息\n        setLoading(true)//只要开始请求数据，更改为loading状态   \n        const res = await axios.post('/zjj/user/getUserById',{Id:_id})\n        if(res.data.err===-1){\n            message.info('参数错误')\n            setLoading(false)\n            return\n        }\n        if(res.data.err===-2){\n            message.info('用户查询失败，请重试')\n            setLoading(false)\n            return\n        }\n        dispatch({\n            type: GET_LOGINUSER,\n            payload: {\n                list: res.data.list[0]\n            }\n        })\n        setLoading(false)\n    };\n\n     //getLoginUser\n     const getAllUser = async right => { //根据login名获取user信息\n        setLoading(true)//只要开始请求数据，更改为loading状态\n        const res = await axios.post('/zjj/user/getUserByRight',{right})\n        if(res.data.err===-1){\n            message.info('参数错误')\n            setLoading(false)\n            return\n        }\n        if(res.data.err===-2){\n            message.info('查询失败，请重试')\n            setLoading(false)\n            return\n        }\n        dispatch({\n            type: GET_ALLUSER,\n            payload: {\n                allUser: res.data.list,\n                total: res.data.total\n            }\n        })\n        setLoading(false)\n    };\n\n    //clear users\n    const clearUser = () => {\n        dispatch({\n            type: ClEAR_USER\n        })\n    };\n\n    //set loading\n    const setLoading = (loading) => {\n        dispatch({\n            type: SET_LOADING, //使用dispatch提交到Reducer中\n            payload: { loading }\n        })\n    }\n\n    return (<UserContext.Provider value={{\n        list: state.list,\n        allUser:state.allUser,\n        loading: state.loading,\n        total:state.total,\n        // userInfo:state.userInfo,\n        // repos:state.repos,\n        setLoading,\n        clearUser,\n        getLoginUser,\n        getAllUser,\n    }}>{props.children}</UserContext.Provider>)\n\n\n}\nexport default UserState\n"]},"metadata":{},"sourceType":"module"}