{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/component/pages/frontend/People/AddressBook/Table1/Table1.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Typography, Input, Table, Tag } from 'antd';\nimport UserContext from '../../../../../../context/user/userContext';\nimport Spinner from '../../../../../laout/Spinner';\nimport '../Table1/Table1.scss';\n\nconst Table1 = e => {\n  const userContext = useContext(UserContext);\n  const getAllUser = userContext.getAllUser,\n        allUser = userContext.allUser,\n        loading = userContext.loading,\n        total = userContext.total;\n  useEffect(() => {\n    //useEffect 重构生命周期didMount\n    getAllUser(1); // eslint-disable-next-line\n  }, []);\n  const Text = Typography.Text;\n  const Search = Input.Search; //分页\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const paginationProps = {\n    showSizeChanger: false,\n    showQuickJumper: false,\n    showTotal: () => \"\\u5171\".concat(total, \"\\u6761\"),\n    pageSize: 5,\n    current: currentPage,\n    total: total,\n    onShowSizeChange: (current, pageSize) => changePageSize(pageSize, current),\n    onChange: current => changePage(current)\n  };\n\n  const changePageSize = (a, b) => {\n    console.log(a, b);\n  };\n\n  const changePage = v => {\n    console.log(v);\n    setCurrentPage(v);\n  };\n\n  const columns = [{\n    title: '\b姓名',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, text)\n  }, {\n    title: '联系方式',\n    dataIndex: 'phone',\n    key: 'phone'\n  }, {\n    title: '邮箱',\n    dataIndex: 'mail',\n    key: 'mail'\n  }, {\n    title: '职务',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, tags.map(tag => {\n      let color = 'geekblue';\n      return React.createElement(Tag, {\n        color: color,\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, tag.toUpperCase());\n    }))\n  }, {\n    title: '操作',\n    key: 'action',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u5220\\u9664\"))\n  }];\n  const data = []; // 初始化antd表格\n\n  if (allUser.length !== undefined) {\n    allUser.forEach((item, index) => {\n      data.push({\n        key: String(index + 1),\n        name: item.name ? item.name : '未填写',\n        phone: item.phone ? item.phone : '未填写',\n        mail: item.mail ? item.mail : item.us ? item.us : '未填写',\n        tags: item.right === 0 ? ['普通用户'] : ['管理员']\n      });\n    });\n  }\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Table1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Table1-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u641C\\u7D22\\uFF1A\"), React.createElement(Search, {\n    maxLength: 20,\n    placeholder: \"\\u8F93\\u5165\\u7528\\u6237\\u4FE1\\u606F\\u641C\\u7D22\",\n    onSearch: value => console.log(value),\n    style: {\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Table1-table\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: paginationProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })));\n};\n\nexport default Table1;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/component/pages/frontend/People/AddressBook/Table1/Table1.js"],"names":["React","useState","useEffect","useContext","Typography","Input","Table","Tag","UserContext","Spinner","Table1","e","userContext","getAllUser","allUser","loading","total","Text","Search","currentPage","setCurrentPage","paginationProps","showSizeChanger","showQuickJumper","showTotal","pageSize","current","onShowSizeChange","changePageSize","onChange","changePage","a","b","console","log","v","columns","title","dataIndex","key","render","text","tags","map","tag","color","toUpperCase","record","data","length","undefined","forEach","item","index","push","String","name","phone","mail","us","right","width","value","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Typography, Input, Table, Tag } from 'antd'\nimport UserContext from '../../../../../../context/user/userContext'\nimport Spinner from '../../../../../laout/Spinner'\n\nimport '../Table1/Table1.scss'\n\n\n\nconst Table1 = (e) => {\n\n    const userContext = useContext(UserContext)\n    const { getAllUser, allUser, loading, total } = userContext\n\n\n    useEffect(() => {  //useEffect 重构生命周期didMount\n        getAllUser(1)\n        // eslint-disable-next-line\n    }, [])\n\n    const { Text } = Typography\n    const { Search } = Input\n\n    //分页\n    const [currentPage, setCurrentPage] = useState(1)\n    const paginationProps = {\n        showSizeChanger: false,\n        showQuickJumper: false,\n        showTotal: () => `共${total}条`,\n        pageSize: 5,\n        current: currentPage,\n        total: total,\n        onShowSizeChange: (current, pageSize) => changePageSize(pageSize, current),\n        onChange: (current) => changePage(current),\n    }\n\n    const changePageSize = (a, b) => {\n        console.log(a, b)\n    }\n\n    const changePage = (v) => {\n        console.log(v)\n        setCurrentPage(v)\n    }\n\n\n\n    const columns = [\n        {\n            title: '\b姓名',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <span>{text}</span>,\n        },\n        {\n            title: '联系方式',\n            dataIndex: 'phone',\n            key: 'phone',\n        },\n        {\n            title: '邮箱',\n            dataIndex: 'mail',\n            key: 'mail',\n        },\n        {\n            title: '职务',\n            key: 'tags',\n            dataIndex: 'tags',\n            render: tags => (\n                <span>\n                    {tags.map(tag => {\n                        let color = 'geekblue';\n\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        );\n                    })}\n                </span>\n            ),\n        },\n        {\n            title: '操作',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    <span style={{ color: 'red' }}>删除</span>\n                </span>\n            ),\n        },\n    ];\n\n    const data = []; // 初始化antd表格\n    if (allUser.length !== undefined) {\n        allUser.forEach((item, index) => {\n            data.push({\n                key: String(index + 1),\n                name: item.name ? item.name : '未填写',\n                phone: item.phone ? item.phone : '未填写',\n                mail: item.mail ? item.mail : (item.us ? item.us : '未填写'),\n                tags: item.right === 0 ? ['普通用户'] : ['管理员']\n            })\n\n        })\n    }\n\n\n\n    if (loading) { return (<Spinner style={{ width: '300px' }}></Spinner>) }\n    return (\n        <div className='Table1'>\n            <div className='Table1-search' >\n                <Text>搜索：</Text>\n                <Search\n                    maxLength={20}\n                    placeholder=\"输入用户信息搜索\"\n                    onSearch={value => console.log(value)}\n                    style={{ width: 200 }}\n                />\n            </div>\n            <div className='Table1-table' style={{ marginBottom: '10px' }}>\n                <Table columns={columns} dataSource={data} pagination={paginationProps} />\n            </div>\n        </div>\n    )\n}\n\nexport default Table1\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}