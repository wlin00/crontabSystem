{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/context/crontab/cronState.js\";\nimport React, { useReducer } from 'react';\nimport CronContext from './cronContext';\nimport CronReducer from './cronReducer';\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { GET_NODE, SET_LOADING } from '../type';\n\nconst CronState = props => {\n  //初始化状态\n  const initialState = {\n    node: {},\n    loading: false,\n    total: 0 // allUser:{},\n    // total:0,\n    // userInfo:{},\n    // repos:[]\n\n  }; //使用useReducer，即state关联Reducer\n\n  const _useReducer = useReducer(CronReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n  //实现方法区域                                                          \n  //getLoginUser\n\n\n  const getNode = async _id => {\n    //根据login名获取user信息\n    setLoading(true); //只要开始请求数据，更改为loading状态\n\n    const res = await axios.get('/crontab/job/list', {});\n\n    if (res.status !== 200) {\n      message.info('网络错误');\n      setLoading(false);\n      return;\n    }\n\n    if (res.data.errno !== 0) {\n      message.info('请求失败');\n      setLoading(false);\n      return;\n    }\n\n    console.log(res.data.data);\n    dispatch({\n      type: GET_NODE,\n      payload: {\n        node: res.data.data,\n        total: res.data.data.length\n      }\n    });\n    setLoading(false);\n  }; //  //getLoginUser\n  //  const getAllUser = async right => { //根据login名获取user信息\n  //     setLoading(true)//只要开始请求数据，更改为loading状态\n  //     const res = await axios.post('http://127.0.0.1:3001/user/getUserByRight',{right})\n  //     if(res.data.err===-1){\n  //         message.info('参数错误')\n  //         setLoading(false)\n  //         return\n  //     }\n  //     if(res.data.err===-2){\n  //         message.info('查询失败，请重试')\n  //         setLoading(false)\n  //         return\n  //     }\n  //     dispatch({\n  //         type: GET_ALLUSER,\n  //         payload: {\n  //             allUser: res.data.list,\n  //             total: res.data.total\n  //         }\n  //     })\n  //     setLoading(false)\n  // };\n  // //clear users\n  // const clearUser = () => {\n  //     dispatch({\n  //         type: ClEAR_USER\n  //     })\n  // };\n  //set loading\n\n\n  const setLoading = loading => {\n    dispatch({\n      type: SET_LOADING,\n      //使用dispatch提交到Reducer中\n      payload: {\n        loading\n      }\n    });\n  };\n\n  return React.createElement(CronContext.Provider, {\n    value: {\n      node: state.node,\n      loading: state.loading,\n      total: state.total,\n      setLoading,\n      getNode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CronState;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/context/crontab/cronState.js"],"names":["React","useReducer","CronContext","CronReducer","axios","message","GET_NODE","SET_LOADING","CronState","props","initialState","node","loading","total","state","dispatch","getNode","_id","setLoading","res","get","status","info","data","errno","console","log","type","payload","length","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,OAAO,EAAE,KAFQ;AAGjBC,IAAAA,KAAK,EAAC,CAHW,CAKjB;AACA;AACA;AACA;;AARiB,GAArB,CAFuB,CAavB;;AAbuB,sBAcGZ,UAAU,CAACE,WAAD,EAAcO,YAAd,CAdb;AAAA;AAAA,QAchBI,KAdgB;AAAA,QAcTC,QAdS,oBAcyC;AAEhE;AACA;;;AACA,QAAMC,OAAO,GAAG,MAAMC,GAAN,IAAa;AAAE;AAC3BC,IAAAA,UAAU,CAAC,IAAD,CAAV,CADyB,CACT;;AAEhB,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,mBAAV,EAA8B,EAA9B,CAAlB;;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAa,GAAhB,EAAoB;AAChBhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,MAAb;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;;AACD,QAAGC,GAAG,CAACI,IAAJ,CAASC,KAAT,KAAiB,CAApB,EAAsB;AAClBnB,MAAAA,OAAO,CAACiB,IAAR,CAAa,MAAb;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,IAAJ,CAASA,IAArB;AACAR,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAErB,QADD;AAELsB,MAAAA,OAAO,EAAE;AACLjB,QAAAA,IAAI,EAAEQ,GAAG,CAACI,IAAJ,CAASA,IADV;AAELV,QAAAA,KAAK,EAACM,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAcM;AAFf;AAFJ,KAAD,CAAR;AAQAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAxBD,CAlBuB,CA4CvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMA,UAAU,GAAIN,OAAD,IAAa;AAC5BG,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEpB,WADD;AACc;AACnBqB,MAAAA,OAAO,EAAE;AAAEhB,QAAAA;AAAF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,SAAQ,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACjCD,MAAAA,IAAI,EAAEG,KAAK,CAACH,IADqB;AAEjCC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFkB;AAGjCC,MAAAA,KAAK,EAACC,KAAK,CAACD,KAHqB;AAKjCK,MAAAA,UALiC;AAMjCF,MAAAA;AANiC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOJP,KAAK,CAACqB,QAPF,CAAR;AAUH,CA/FD;;AAgGA,eAAetB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CronContext from './cronContext';\nimport CronReducer from './cronReducer';\nimport axios from 'axios'\nimport {message} from 'antd'\n\nimport { GET_NODE, SET_LOADING } from '../type'\n\n\n\nconst CronState = props => {\n    //初始化状态\n    const initialState = {\n        node: {},\n        loading: false,\n        total:0\n\n        // allUser:{},\n        // total:0,\n        // userInfo:{},\n        // repos:[]\n    };\n\n    //使用useReducer，即state关联Reducer\n    const [state, dispatch] = useReducer(CronReducer, initialState) //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n\n    //实现方法区域                                                          \n    //getLoginUser\n    const getNode = async _id => { //根据login名获取user信息\n        setLoading(true)//只要开始请求数据，更改为loading状态\n        \n        const res = await axios.get('/crontab/job/list',{})\n        if(res.status!==200){\n            message.info('网络错误')\n            setLoading(false)\n            return\n        }\n        if(res.data.errno!==0){\n            message.info('请求失败')\n            setLoading(false)\n            return\n        }\n        console.log(res.data.data)\n        dispatch({\n            type: GET_NODE,\n            payload: {\n                node: res.data.data,\n                total:res.data.data.length\n            }\n        })\n\n        setLoading(false)\n    };\n\n    //  //getLoginUser\n    //  const getAllUser = async right => { //根据login名获取user信息\n    //     setLoading(true)//只要开始请求数据，更改为loading状态\n        \n    //     const res = await axios.post('http://127.0.0.1:3001/user/getUserByRight',{right})\n    //     if(res.data.err===-1){\n    //         message.info('参数错误')\n    //         setLoading(false)\n    //         return\n    //     }\n    //     if(res.data.err===-2){\n    //         message.info('查询失败，请重试')\n    //         setLoading(false)\n    //         return\n    //     }\n    //     dispatch({\n    //         type: GET_ALLUSER,\n    //         payload: {\n    //             allUser: res.data.list,\n    //             total: res.data.total\n    //         }\n    //     })\n\n    //     setLoading(false)\n    // };\n\n    // //clear users\n    // const clearUser = () => {\n    //     dispatch({\n    //         type: ClEAR_USER\n    //     })\n    // };\n\n    //set loading\n    const setLoading = (loading) => {\n        dispatch({\n            type: SET_LOADING, //使用dispatch提交到Reducer中\n            payload: { loading }\n        })\n    }\n\n    return (<CronContext.Provider value={{\n        node: state.node,\n        loading: state.loading,\n        total:state.total,\n\n        setLoading,\n        getNode,\n    }}>{props.children}</CronContext.Provider>)\n\n\n}\nexport default CronState\n"]},"metadata":{},"sourceType":"module"}