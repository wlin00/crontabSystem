{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/\\u6BD5\\u8BBE/\\u6BD5\\u8BBE/src/context/github/githubState.js\";\nimport React, { useReducer } from 'react';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport axios from 'axios';\nimport { SEARCH_USER, ClEAR_USER, GET_USERINFO, GET_REPOS, SET_LOADING } from '../type';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== \"production\") {\n  //不在生产环境则使用本地环境变量\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  //初始化状态\n  const initialState = {\n    users: [],\n    loading: false,\n    userInfo: {},\n    repos: []\n  }; //使用useReducer，即state关联Reducer\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n  //实现方法区域                                                          \n  //search user\n\n\n  const searchUser = async text => {\n    //e由事件回调来获取自组件的serach——input框的输入传值\n    setLoading(); //只要开始请求数据，更改为loading状态\n\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\\n        \").concat(githubClientId, \"$client_secret=\\n        \").concat(githubClientSecret));\n    dispatch({\n      type: SEARCH_USER,\n      payload: res.data.items //请求数据结束，解除loading状态，并且将数据存入state\n\n    });\n  }; //get userInfo\n\n\n  const getUserInfo = async login => {\n    //根据login名获取user信息\n    setLoading(); //只要开始请求数据，更改为loading状态\n\n    const res = await axios.get(\"https://api.github.com/users/\".concat(login, \"?client_id=\\n        \").concat(githubClientId, \"$client_secret=\\n        \").concat(githubClientSecret));\n    dispatch({\n      type: GET_USERINFO,\n      payload: res.data\n    });\n  }; //get repos \n\n\n  const getRepos = async login => {\n    //根据login名获取用户仓库信息\n    setLoading(); //只要开始请求数据，更改为loading状态\n\n    const res = await axios.get(\"https://api.github.com/users/\".concat(login, \"/repos?per_page=5&sort=created:asc&client_id=\\n        \").concat(githubClientId, \"$client_secret=\\n        \").concat(githubClientSecret));\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; //clear users\n\n\n  const clearUser = () => {\n    dispatch({\n      type: ClEAR_USER\n    });\n  }; //set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING //使用dispatch提交到Reducer中\n\n    });\n  };\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      userInfo: state.userInfo,\n      repos: state.repos,\n      loading: state.loading,\n      setLoading,\n      clearUser,\n      getRepos,\n      getUserInfo,\n      searchUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/mac/Desktop/毕设/毕设/src/context/github/githubState.js"],"names":["React","useReducer","GithubContext","GithubReducer","axios","SEARCH_USER","ClEAR_USER","GET_USERINFO","GET_REPOS","SET_LOADING","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","loading","userInfo","repos","state","dispatch","searchUser","text","setLoading","res","get","type","payload","data","items","getUserInfo","login","getRepos","clearUser","children"],"mappings":"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","sourcesContent":["import React ,{useReducer} from 'react';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport axios from 'axios'\nimport {SEARCH_USER,ClEAR_USER,GET_USERINFO,GET_REPOS,SET_LOADING} from '../type'\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !==\"production\"){ //不在生产环境则使用本地环境变量\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}else{\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n\n}\n\nconst GithubState = props =>{\n    //初始化状态\n    const initialState = {\n        users:[],\n        loading:false,\n        userInfo:{},\n        repos:[]\n    };\n    //使用useReducer，即state关联Reducer\n    const [state,dispatch] = useReducer(GithubReducer,initialState) //函数参数1：当前提交的reduver       函数参数2：当前提交的状态值 ；\n    //实现方法区域                                                          \n    //search user\n    const searchUser = async text =>{ //e由事件回调来获取自组件的serach——input框的输入传值\n        setLoading()//只要开始请求数据，更改为loading状态\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\n        ${githubClientId}$client_secret=\n        ${githubClientSecret}`)\n        dispatch({\n            type:SEARCH_USER,\n            payload:res.data.items //请求数据结束，解除loading状态，并且将数据存入state\n        })\n      };\n    //get userInfo\n    const getUserInfo = async login =>{ //根据login名获取user信息\n        setLoading()//只要开始请求数据，更改为loading状态\n        const res = await axios.get(`https://api.github.com/users/${login}?client_id=\n        ${githubClientId}$client_secret=\n        ${githubClientSecret}`)\n        dispatch({\n            type:GET_USERINFO,\n            payload:res.data\n        })\n      };\n    //get repos \n    const getRepos = async login =>{ //根据login名获取用户仓库信息\n        setLoading()//只要开始请求数据，更改为loading状态\n        const res = await axios.get(`https://api.github.com/users/${login}/repos?per_page=5&sort=created:asc&client_id=\n        ${githubClientId}$client_secret=\n        ${githubClientSecret}`)\n        dispatch({\n            type:GET_REPOS,\n            payload:res.data\n        })\n      };\n    //clear users\n    const clearUser=()=>{\n        dispatch({\n            type:ClEAR_USER\n        })\n      }; \n\n    //set loading\n    const  setLoading =()=>{\n        dispatch({\n            type:SET_LOADING  //使用dispatch提交到Reducer中\n        })\n    }\n\n    return (<GithubContext.Provider value={{\n        users:state.users,\n        userInfo:state.userInfo,\n        repos:state.repos,\n        loading:state.loading,\n        setLoading,\n        clearUser,\n        getRepos,\n        getUserInfo,\n        searchUser\n    }}>{props.children}</GithubContext.Provider>)\n\n\n}\nexport default GithubState\n"]},"metadata":{},"sourceType":"module"}